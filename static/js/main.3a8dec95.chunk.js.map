{"version":3,"sources":["components/Title.jsx","components/Search.jsx","components/Anime.jsx","components/Manga.jsx","components/LightNovel.jsx","components/VisualNovel.jsx","components/Doujin.jsx","components/ErrorMessage.jsx","App.jsx","index.js"],"names":["Title","title","Header","size","inverted","style","margin","panes","menuItem","placeholder","Search","index","setIndex","setQuery","handleClick","useState","setPlaceholder","useEffect","Container","width","Segment","overflow","padding","Tab","menu","attached","tabular","renderActiveOnly","onTabChange","e","activeIndex","Input","action","icon","onClick","onChange","target","value","onKeyDown","key","Anime","forwardRef","ref","query","active","found","setFound","message","setMessage","setTitle","titleEnglish","setTitleEnglish","url","setUrl","imageUrl","setImageUrl","type","setType","source","setSource","episodes","setEpisodes","status","setStatus","premiered","setPremiered","aired","setAired","duration","setDuration","rating","setRating","score","setScore","synopsis","setSynopsis","relations","setRelations","studios","setStudios","genres","setGenres","openings","setOpenings","endings","setEndings","fetchData","a","Loader","inline","first","charAt","last","slice","search","fetch","process","response","json","data","useImperativeHandle","textGridRow","name","Grid","Row","marginBottom","className","columns","textAlign","Column","largeScreen","tablet","mobile","Image","src","fluid","label","color","content","ribbon","href","join","Object","entries","map","r","length","x","i","Manga","volumes","setVolumes","chapters","setChapters","published","setPublished","authors","setAuthors","serializations","setSerializations","names","n","split","reverse","LightNovel","VisualNovel","blurred","setBlurred","imageNSFW","setImageNSFW","released","setReleased","description","setDescription","tags","setTags","staff","setStaff","anime","setAnime","setLength","Date","Dimmer","Dimmable","as","blurring","dimmed","Button","toLocaleDateString","year","month","day","Doujin","id","setId","uploadDate","setUploadDate","pages","setPages","characters","setCharacters","parodies","setParodies","artists","setArtists","groups","setGroups","languages","setLanguages","categories","setCategories","arrayGridColumn","array","ErrorMessage","App","setActive","animeRef","useRef","mangaRef","LightNovelRef","VisualNovelRef","doujinRef","test","parsePattern","current","border","lineHeight","ReactDOM","render","document","getElementById"],"mappings":"uPAaeA,MAVf,YAAyB,IAATC,EAAQ,EAARA,MACf,OACC,8BACC,cAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,UAAQ,EAACC,MAAO,CAAEC,OAAQ,QAA9C,SACEL,O,0BCJCM,EAAQ,CACb,CAAEC,SAAU,OAAQC,YAAa,6DACjC,CAAED,SAAU,QAASC,YAAa,wBAClC,CAAED,SAAU,QAASC,YAAa,wBAClC,CAAED,SAAU,cAAeC,YAAa,8BACxC,CAAED,SAAU,eAAgBC,YAAa,+BACzC,CAAED,SAAU,SAAUC,YAAa,4BAqDrBC,MAlDf,YAA2D,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAAc,EACnBC,mBAAS,UADU,mBAClDN,EADkD,KACrCO,EADqC,KAqBzD,OAlBAC,qBAAU,WACTD,EAAeT,EAAMI,GAAOF,eAC1B,CAACE,IAiBH,eAACO,EAAA,EAAD,CAAWb,MAAO,CAAEc,MAAO,OAA3B,UACC,cAACC,EAAA,EAAD,CAAShB,UAAQ,EAChBC,MAAO,CAACgB,SAAU,OAAQf,OAAQ,OAAQgB,QAAS,OADpD,SAEC,cAACC,EAAA,EAAD,CAAKhB,MAAOA,EACXiB,KAAM,CACLC,UAAU,EACVC,SAAS,EACTtB,UAAU,GAEXuB,kBAAkB,EAClBC,YAzBoB,SAACC,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,YAC7BlB,EAASkB,QA2BR,cAACC,EAAA,EAAD,CAAOC,OAAQ,CACbC,KAAM,SACNC,QAAS,WAAOpB,MAEjBT,MAAO,CAAEc,MAAO,QAChBhB,KAAK,QACLM,YAAaA,EACbL,UAAQ,EACR+B,SAhCuB,SAACN,GAC1BhB,EAASgB,EAAEO,OAAOC,QAgChBC,UA7BmB,SAACT,GACR,UAAVA,EAAEU,KACLzB,W,kDCwHY0B,EAhJDC,sBAAW,WAAkBC,GAAS,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAiB,EACxB7B,oBAAS,GADe,mBAC3C8B,EAD2C,KACpCC,EADoC,OAEpB/B,mBAAS,IAFW,mBAE3CgC,EAF2C,KAElCC,EAFkC,OAIxBjC,mBAAS,IAJe,mBAI3Cd,EAJ2C,KAIpCgD,EAJoC,OAKVlC,mBAAS,IALC,mBAK3CmC,EAL2C,KAK7BC,EAL6B,OAM5BpC,mBAAS,IANmB,mBAM3CqC,EAN2C,KAMtCC,EANsC,OAOlBtC,mBAAS,IAPS,mBAO3CuC,EAP2C,KAOjCC,EAPiC,OAQ1BxC,mBAAS,IARiB,mBAQ3CyC,EAR2C,KAQrCC,EARqC,OAStB1C,mBAAS,IATa,mBAS3C2C,EAT2C,KASnCC,EATmC,OAUlB5C,mBAAS,GAVS,mBAU3C6C,EAV2C,KAUjCC,EAViC,OAWtB9C,mBAAS,IAXa,mBAW3C+C,EAX2C,KAWnCC,EAXmC,QAYhBhD,mBAAS,IAZO,qBAY3CiD,GAZ2C,MAYhCC,GAZgC,SAaxBlD,mBAAS,IAbe,qBAa3CmD,GAb2C,MAapCC,GAboC,SAclBpD,mBAAS,IAdS,qBAc3CqD,GAd2C,MAcjCC,GAdiC,SAetBtD,mBAAS,IAfa,qBAe3CuD,GAf2C,MAenCC,GAfmC,SAgBxBxD,mBAAS,GAhBe,qBAgB3CyD,GAhB2C,MAgBpCC,GAhBoC,SAiBlB1D,mBAAS,IAjBS,qBAiB3C2D,GAjB2C,MAiBjCC,GAjBiC,SAkBhB5D,mBAAS,IAlBO,qBAkB3C6D,GAlB2C,MAkBhCC,GAlBgC,SAmBpB9D,mBAAS,IAnBW,qBAmB3C+D,GAnB2C,MAmBlCC,GAnBkC,SAoBtBhE,mBAAS,IApBa,qBAoB3CiE,GApB2C,MAoBnCC,GApBmC,SAqBlBlE,mBAAS,IArBS,qBAqB3CmE,GArB2C,MAqBjCC,GArBiC,SAsBpBpE,mBAAS,IAtBW,qBAsB3CqE,GAtB2C,MAsBlCC,GAtBkC,MAwB5CC,GAAS,uCAAG,oCAAAC,EAAA,6DACjBvC,EAAW,cAACwC,EAAA,EAAD,CAAqB5C,QAAM,EAAC6C,OAAO,WAAWtF,KAAK,QAAnD,sBAAY,WACvB2C,GAAS,GAEH4C,EAAQ/C,EAAMgD,OAAO,GACrBC,EAAOjD,EAAMkD,OAAO,GACpBC,EAAmB,MAAVJ,GAA0B,MAATE,EAAejD,EAAMkD,MAAM,GAAI,GAAKlD,EANnD,SAQMoD,MAAM,GAAD,OAlClBC,8CAkCkB,kBAAiBF,IAR5B,UASO,OADlBG,EARW,QASJnC,OATI,kCAUGmC,EAASC,OAVZ,QAUVC,EAVU,OAWhBrD,GAAS,GACTG,EAASkD,EAAI,OACbhD,EAAgBgD,EAAI,eACpB9C,EAAO8C,EAAI,KACX5C,EAAY4C,EAAI,OAChB1C,EAAQ0C,EAAI,MACZxC,EAAUwC,EAAI,QACdtC,EAAYsC,EAAI,SAAeA,EAAI,SAAe,KAClDpC,EAAUoC,EAAI,QACdlC,GAAakC,EAAI,WACjBhC,GAASgC,EAAI,MAAYA,EAAI,MAAJ,OAA0B,KACnD9B,GAAY8B,EAAI,UAChB5B,GAAU4B,EAAI,QACd1B,GAAS0B,EAAI,OACbxB,GAAYwB,EAAI,UAChBtB,GAAasB,EAAI,WACjBpB,GAAWoB,EAAI,SACflB,GAAUkB,EAAI,QACdhB,GAAYgB,EAAI,UAChBd,GAAWc,EAAI,SA9BC,wBAiChBrD,GAAS,GACTE,EAAW,mBAlCK,4CAAH,qDAsCfoD,8BAAoB1D,GAAK,WACxB,MAAO,CACN4C,UAAWA,OAIb,IAAMe,GAAc,SAACC,EAAMH,GAC1B,OAAIA,GAAiB,KAATA,EAEV,eAACI,EAAA,EAAKC,IAAN,CAAqBnG,MAAO,CAACoG,aAAc,QAA3C,UACC,sBAAMC,UAAU,OAAhB,SAAwBJ,IAAaH,IADvBG,GAMT,MAIT,OACC,8BACc,UAAX1D,EAAqBC,EACvB,eAAC3B,EAAA,EAAD,CAAWwF,UAAU,eAArB,UACC,eAACH,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,cAACL,EAAA,EAAKM,OAAN,CAAaC,YAAa,EAAGC,OAAQ,EAAGC,OAAQ,EAAhD,SACC,cAACC,EAAA,EAAD,CAAOC,IAAK5D,EAAU6D,OAAK,EAACC,MAAO,CAClCC,MAAO,OACPC,QAAS9C,GACTvC,KAAM,OACNsF,QAAQ,OAGV,eAAChB,EAAA,EAAKM,OAAN,CAAaC,YAAa,GAAIC,OAAQ,EAAGC,OAAQ,EAAjD,UACC,cAACT,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,SACC,cAACvG,EAAA,EAAD,CAAQE,UAAQ,EAACwG,UAAU,OAA3B,SAAkC,mBAAGY,KAAMpE,EAAKsD,UAAU,OAAxB,SAAgCzG,QAElEoG,GAAY,kBAAmBnD,GAChC,eAACqD,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,UACC,sBAAMC,UAAU,OAAhB,oBAAqClD,EADtC,MAC8C,sBAAMkD,UAAU,OAAhB,wBAAyC9C,KAEtFyC,GAAY,WAAYvC,GACxBuC,GAAY,WAAY/B,IACxB+B,GAAY,YAAavB,GAAQ2C,KAAK,OACtCpB,GAAY,WAAY3C,GACxB2C,GAAY,aAAcjC,IAC1BiC,GAAY,WAAYrC,IACxBqC,GAAY,UAAWnC,IACvBmC,GAAY,WAAYrB,GAAOyC,KAAK,aAGvC,eAAClB,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,eAACL,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,uBADD,IAC0ChC,MAE1C,cAAC6B,EAAA,EAAKM,OAAN,UACEa,OAAOC,QAAQ/C,IAAWgD,KAAI,SAAAC,GAC9B,OAAOxB,GAAY,GAAD,OAAIwB,EAAE,GAAN,MAAcA,EAAE,GAAGJ,KAAK,YAG5C,eAAClB,EAAA,EAAKM,OAAN,WACC,cAACN,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,OAAhC,SAAwC,sBAAMC,UAAU,OAAhB,wBACvCxB,IAAYA,GAAS4C,OAAS,EAC/B5C,GAAS0C,KAAI,SAACG,EAAGC,GAChB,OAAO,eAACzB,EAAA,EAAKC,IAAN,CAAyBnG,MAAO,CAACoG,aAAc,OAA/C,UAAwDuB,EAAE,EAA1D,KAA+DD,IAA/D,YAAoBC,OAE1B,UAEH,eAACzB,EAAA,EAAKM,OAAN,WACC,cAACN,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,OAAhC,SAAwC,sBAAMC,UAAU,OAAhB,uBACvCtB,IAAWA,GAAQ0C,OAAS,EAC7B1C,GAAQwC,KAAI,SAACG,EAAGC,GACf,OAAO,eAACzB,EAAA,EAAKC,IAAN,CAAyBnG,MAAO,CAACoG,aAAc,OAA/C,UAAwDuB,EAAE,EAA1D,KAA+DD,IAA/D,YAAoBC,OAE1B,gBAIHjF,EAAU,UCbAkF,EA9HDxF,sBAAW,WAAkBC,GAAS,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAiB,EACxB7B,oBAAS,GADe,mBAC3C8B,EAD2C,KACpCC,EADoC,OAEpB/B,mBAAS,IAFW,mBAE3CgC,EAF2C,KAElCC,EAFkC,OAIxBjC,mBAAS,IAJe,mBAI3Cd,EAJ2C,KAIpCgD,EAJoC,OAKVlC,mBAAS,IALC,mBAK3CmC,EAL2C,KAK7BC,EAL6B,OAM5BpC,mBAAS,IANmB,mBAM3CqC,EAN2C,KAMtCC,EANsC,OAOlBtC,mBAAS,IAPS,mBAO3CuC,EAP2C,KAOjCC,EAPiC,OAQ1BxC,mBAAS,IARiB,mBAQ3CyC,EAR2C,KAQrCC,EARqC,OASpB1C,mBAAS,GATW,mBAS3CmH,EAT2C,KASlCC,EATkC,OAUlBpH,mBAAS,GAVS,mBAU3CqH,EAV2C,KAUjCC,EAViC,OAWtBtH,mBAAS,IAXa,mBAW3C+C,EAX2C,KAWnCC,EAXmC,QAYhBhD,mBAAS,IAZO,qBAY3CuH,GAZ2C,MAYhCC,GAZgC,SAatBxH,mBAAS,IAba,qBAa3CuD,GAb2C,MAanCC,GAbmC,SAcxBxD,mBAAS,GAde,qBAc3CyD,GAd2C,MAcpCC,GAdoC,SAelB1D,mBAAS,IAfS,qBAe3C2D,GAf2C,MAejCC,GAfiC,SAgBhB5D,mBAAS,IAhBO,qBAgB3C6D,GAhB2C,MAgBhCC,GAhBgC,SAiBtB9D,mBAAS,IAjBa,qBAiB3CiE,GAjB2C,MAiBnCC,GAjBmC,SAkBpBlE,mBAAS,IAlBW,qBAkB3CyH,GAlB2C,MAkBlCC,GAlBkC,SAmBN1H,mBAAS,IAnBH,qBAmB3C2H,GAnB2C,MAmB3BC,GAnB2B,MAqB5CrD,GAAS,uCAAG,oCAAAC,EAAA,6DACjBvC,EAAW,cAACwC,EAAA,EAAD,CAAqB5C,QAAM,EAAC6C,OAAO,WAAWtF,KAAK,QAAnD,sBAAY,WACvB2C,GAAS,GAEH4C,EAAQ/C,EAAMgD,OAAO,GACrBC,EAAOjD,EAAMkD,OAAO,GACpBC,EAAmB,MAAVJ,GAA0B,MAATE,EAAejD,EAAMkD,MAAM,GAAI,GAAKlD,EANnD,SAQMoD,MAAM,GAAD,OA/BlBC,8CA+BkB,kBAAiBF,IAR5B,UASO,OADlBG,EARW,QASJnC,OATI,kCAUGmC,EAASC,OAVZ,QAUVC,EAVU,OAWhBrD,GAAS,GACTG,EAASkD,EAAI,OACbhD,EAAgBgD,EAAI,eACpB9C,EAAO8C,EAAI,KACX5C,EAAY4C,EAAI,OAChB1C,EAAQ0C,EAAI,MACZgC,EAAWhC,EAAI,QAAcA,EAAI,QAAc,KAC/CkC,EAAYlC,EAAI,SAAeA,EAAI,SAAe,KAClDpC,EAAUoC,EAAI,QACdoC,GAAapC,EAAI,UAAgBA,EAAI,UAAJ,OAA8B,IAC/D5B,GAAU4B,EAAI,QACd1B,GAAS0B,EAAI,OACbxB,GAAYwB,EAAI,UAChBtB,GAAasB,EAAI,WACjBlB,GAAUkB,EAAI,QACdsC,GAAWtC,EAAI,SACfwC,GAAkBxC,EAAI,gBA3BN,wBA8BhBrD,GAAS,GACTE,EAAW,mBA/BK,4CAAH,qDAmCfoD,8BAAoB1D,GAAK,WACxB,MAAO,CACN4C,UAAWA,OAIb,IAauBsD,GAbjBvC,GAAc,SAACC,EAAMH,GAC1B,OAAIA,GAAiB,KAATA,EAEV,eAACI,EAAA,EAAKC,IAAN,CAAqBnG,MAAO,CAACoG,aAAc,QAA3C,UACC,sBAAMC,UAAU,OAAhB,SAAwBJ,IAAaH,IADvBG,GAMT,MAQT,OACC,8BACc,UAAX1D,EAAqBC,EACvB,eAAC3B,EAAA,EAAD,CAAWwF,UAAU,eAArB,UACC,eAACH,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,cAACL,EAAA,EAAKM,OAAN,CAAaC,YAAa,EAAGC,OAAQ,EAAGC,OAAQ,EAAhD,SACC,cAACC,EAAA,EAAD,CAAOC,IAAK5D,EAAU6D,OAAK,EAACC,MAAO,CAClCC,MAAO,OACPC,QAAS9C,GACTvC,KAAM,OACNsF,QAAQ,OAGV,eAAChB,EAAA,EAAKM,OAAN,CAAaC,YAAa,GAAIC,OAAQ,EAAGC,OAAQ,EAAjD,UACC,cAACT,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,SACC,cAACvG,EAAA,EAAD,CAAQE,UAAQ,EAACwG,UAAU,OAA3B,SAAkC,mBAAGY,KAAMpE,EAAKsD,UAAU,OAAxB,SAAgCzG,QAElEoG,GAAY,kBAAmBnD,GAChC,eAACqD,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,UACC,sBAAMC,UAAU,OAAhB,oBAAqClD,EADtC,MAC8C,sBAAMkD,UAAU,OAAhB,sBAAuC5C,KAErF,eAACyC,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,UACC,sBAAMC,UAAU,OAAhB,uBAAwCwB,EADzC,MACoD,sBAAMxB,UAAU,OAAhB,wBAAyC0B,KAE5F/B,GAAY,WAAY/B,IACxB+B,GAAY,cAAeiC,IAC3BjC,GAAY,aA9BKuC,GA8BsBJ,GA7BrCI,GAAMhB,KAAI,SAAAiB,GAAC,OAAIA,EAAEC,MAAM,MAAMC,UAAUtB,KAAK,QAAMA,KAAK,QA8BzDpB,GAAY,mBAAoBqC,IAChCrC,GAAY,WAAYrB,GAAOyC,KAAK,aAGvC,eAAClB,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,eAACL,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,uBADD,IAC0ChC,MAE1C,cAAC6B,EAAA,EAAKM,OAAN,UACEa,OAAOC,QAAQ/C,IAAWgD,KAAI,SAAAC,GAC9B,OAAOxB,GAAY,GAAD,OAAIwB,EAAE,GAAN,MAAcA,EAAE,GAAGJ,KAAK,kBAK5C1E,EAAU,UCEAiG,EA3HIvG,sBAAW,WAAkBC,GAAS,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAiB,EAC7B7B,oBAAS,GADoB,mBAChD8B,EADgD,KACzCC,EADyC,OAEzB/B,mBAAS,IAFgB,mBAEhDgC,EAFgD,KAEvCC,EAFuC,OAI7BjC,mBAAS,IAJoB,mBAIhDd,EAJgD,KAIzCgD,EAJyC,OAKflC,mBAAS,IALM,mBAKhDmC,EALgD,KAKlCC,EALkC,OAMjCpC,mBAAS,IANwB,mBAMhDqC,EANgD,KAM3CC,EAN2C,OAOvBtC,mBAAS,IAPc,mBAOhDuC,EAPgD,KAOtCC,EAPsC,OAQ/BxC,mBAAS,IARsB,mBAQhDyC,EARgD,KAQ1CC,EAR0C,OASzB1C,mBAAS,GATgB,mBAShDmH,EATgD,KASvCC,EATuC,OAUvBpH,mBAAS,GAVc,mBAUhDqH,EAVgD,KAUtCC,EAVsC,OAW3BtH,mBAAS,IAXkB,mBAWhD+C,EAXgD,KAWxCC,EAXwC,QAYrBhD,mBAAS,IAZY,qBAYhDuH,GAZgD,MAYrCC,GAZqC,SAa3BxH,mBAAS,IAbkB,qBAahDuD,GAbgD,MAaxCC,GAbwC,SAc7BxD,mBAAS,GAdoB,qBAchDyD,GAdgD,MAczCC,GAdyC,SAevB1D,mBAAS,IAfc,qBAehD2D,GAfgD,MAetCC,GAfsC,SAgBrB5D,mBAAS,IAhBY,qBAgBhD6D,GAhBgD,MAgBrCC,GAhBqC,SAiB3B9D,mBAAS,IAjBkB,qBAiBhDiE,GAjBgD,MAiBxCC,GAjBwC,SAkBzBlE,mBAAS,IAlBgB,qBAkBhDyH,GAlBgD,MAkBvCC,GAlBuC,MAoBjDnD,GAAS,uCAAG,oCAAAC,EAAA,6DACjBvC,EAAW,cAACwC,EAAA,EAAD,CAAqB5C,QAAM,EAAC6C,OAAO,WAAWtF,KAAK,QAAnD,sBAAY,WACvB2C,GAAS,GAEH4C,EAAQ/C,EAAMgD,OAAO,GACrBC,EAAOjD,EAAMkD,OAAO,GACpBC,EAAmB,MAAVJ,GAA0B,MAATE,EAAejD,EAAMkD,MAAM,GAAI,GAAKlD,EANnD,SAQMoD,MAAM,GAAD,OA9BlBC,8CA8BkB,eAAcF,IARzB,UASO,OADlBG,EARW,QASJnC,OATI,kCAUGmC,EAASC,OAVZ,QAUVC,EAVU,OAWhBrD,GAAS,GACTG,EAASkD,EAAI,OACbhD,EAAgBgD,EAAI,eACpB9C,EAAO8C,EAAI,KACX5C,EAAY4C,EAAI,OAChB1C,EAAQ0C,EAAI,MACZgC,EAAWhC,EAAI,QAAcA,EAAI,QAAc,KAC/CkC,EAAYlC,EAAI,SAAeA,EAAI,SAAe,KAClDpC,EAAUoC,EAAI,QACdoC,GAAapC,EAAI,UAAgBA,EAAI,UAAJ,OAA8B,IAC/D5B,GAAU4B,EAAI,QACd1B,GAAS0B,EAAI,OACbxB,GAAYwB,EAAI,UAChBtB,GAAasB,EAAI,WACjBlB,GAAUkB,EAAI,QACdsC,GAAWtC,EAAI,SA1BC,wBA6BhBrD,GAAS,GACTE,EAAW,yBA9BK,4CAAH,qDAkCfoD,8BAAoB1D,GAAK,WACxB,MAAO,CACN4C,UAAWA,OAIb,IAauBsD,GAbjBvC,GAAc,SAACC,EAAMH,GAC1B,OAAIA,GAAiB,KAATA,EAEV,eAACI,EAAA,EAAKC,IAAN,CAAqBnG,MAAO,CAACoG,aAAc,QAA3C,UACC,sBAAMC,UAAU,OAAhB,SAAwBJ,IAAaH,IADvBG,GAMT,MAQT,OACC,8BACc,gBAAX1D,EAA2BC,EAC7B,eAAC3B,EAAA,EAAD,CAAWwF,UAAU,eAArB,UACC,eAACH,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,cAACL,EAAA,EAAKM,OAAN,CAAaC,YAAa,EAAGC,OAAQ,EAAGC,OAAQ,EAAhD,SACC,cAACC,EAAA,EAAD,CAAOC,IAAK5D,EAAU6D,OAAK,EAACC,MAAO,CAClCC,MAAO,OACPC,QAAS9C,GACTvC,KAAM,OACNsF,QAAQ,OAGV,eAAChB,EAAA,EAAKM,OAAN,CAAaC,YAAa,GAAIC,OAAQ,EAAGC,OAAQ,EAAjD,UACC,cAACT,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,SACC,cAACvG,EAAA,EAAD,CAAQE,UAAQ,EAACwG,UAAU,OAA3B,SAAkC,mBAAGY,KAAMpE,EAAKsD,UAAU,OAAxB,SAAgCzG,QAElEoG,GAAY,kBAAmBnD,GAChC,eAACqD,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,UACC,sBAAMC,UAAU,OAAhB,oBAAqClD,EADtC,MAC8C,sBAAMkD,UAAU,OAAhB,sBAAuC5C,KAErF,eAACyC,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,UACC,sBAAMC,UAAU,OAAhB,uBAAwCwB,EADzC,MACoD,sBAAMxB,UAAU,OAAhB,wBAAyC0B,KAE5F/B,GAAY,WAAY/B,IACxB+B,GAAY,cAAeiC,IAC3BjC,GAAY,aA9BKuC,GA8BsBJ,GA7BrCI,GAAMhB,KAAI,SAAAiB,GAAC,OAAIA,EAAEC,MAAM,MAAMC,UAAUtB,KAAK,QAAMA,KAAK,QA8BzDpB,GAAY,WAAYrB,GAAOyC,KAAK,aAGvC,eAAClB,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,eAACL,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,uBADD,IAC0ChC,MAE1C,cAAC6B,EAAA,EAAKM,OAAN,UACEa,OAAOC,QAAQ/C,IAAWgD,KAAI,SAAAC,GAC9B,OAAOxB,GAAY,GAAD,OAAIwB,EAAE,GAAN,MAAcA,EAAE,GAAGJ,KAAK,kBAK5C1E,EAAU,U,kBCSAkG,EA/HKxG,sBAAW,WAAkBC,GAAS,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAiB,EAC9B7B,oBAAS,GADqB,mBACjD8B,EADiD,KAC1CC,EAD0C,OAE1B/B,mBAAS,IAFiB,mBAEjDgC,EAFiD,KAExCC,EAFwC,OAG1BjC,oBAAS,GAHiB,mBAGjDmI,EAHiD,KAGxCC,EAHwC,OAK9BpI,mBAAS,IALqB,mBAKjDd,EALiD,KAK1CgD,EAL0C,OAMlClC,mBAAS,IANyB,mBAMjDqC,EANiD,KAM5CC,EAN4C,OAOxBtC,mBAAS,IAPe,mBAOjDuC,EAPiD,KAOvCC,EAPuC,OAQtBxC,oBAAS,GARa,mBAQjDqI,EARiD,KAQtCC,EARsC,OASxBtI,mBAAS,MATe,mBASjDuI,EATiD,KASvCC,EATuC,OAUlBxI,mBAAS,IAVS,mBAUjDyI,EAViD,KAUpCC,EAVoC,OAWhC1I,mBAAS,IAXuB,mBAWjD2I,GAXiD,KAW3CC,GAX2C,QAY9B5I,mBAAS,IAZqB,qBAYjD6I,GAZiD,MAY1CC,GAZ0C,SAa9B9I,oBAAS,GAbqB,qBAajD+I,GAbiD,MAa1CC,GAb0C,SAc5BhJ,mBAAS,IAdmB,qBAcjD+G,GAdiD,MAczCkC,GAdyC,SAe9BjJ,mBAAS,GAfqB,qBAejDyD,GAfiD,MAe1CC,GAf0C,MAiBlDa,GAAS,uCAAG,oCAAAC,EAAA,6DACjBvC,EAAW,cAACwC,EAAA,EAAD,CAAqB5C,QAAM,EAAC6C,OAAO,WAAWtF,KAAK,QAAnD,sBAAY,WACvB2C,GAAS,GAEH4C,EAAQ/C,EAAMgD,OAAO,GACrBC,EAAOjD,EAAMkD,OAAO,GACpBC,EAAmB,MAAVJ,GAA0B,MAATE,EAAejD,EAAMkD,MAAM,GAAI,GAAKlD,EANnD,SAQMoD,MAAM,GAAD,OA3BlBC,8CA2BkB,eAAcF,IARzB,UASO,OADlBG,EARW,QASJnC,OATI,kCAUGmC,EAASC,OAVZ,QAUVC,EAVU,OAWhBrD,GAAS,GACTqG,GAAW,GACXlG,EAASkD,EAAI,OACb9C,EAAO8C,EAAI,KACX5C,EAAY4C,EAAI,OAChBkD,EAAalD,EAAI,YACjBoD,EAAYpD,EAAI,SAAe,IAAI8D,KAAK9D,EAAI,UAAgB,MAC5DsD,EAAetD,EAAI,aACnBwD,GAAQxD,EAAI,MACZ0D,GAAS1D,EAAI,OACb4D,GAAS5D,EAAI,OACb6D,GAAU7D,EAAI,QACd1B,GAAS0B,EAAI,QAvBG,wBA0BhBrD,GAAS,GACTE,EAAW,0BA3BK,4CAAH,qDA+BfoD,8BAAoB1D,GAAK,WACxB,MAAO,CACN4C,UAAWA,OAIb,IAAMe,GAAc,SAACC,EAAMH,GAC1B,OAAIA,GAAiB,KAATA,EAEV,eAACI,EAAA,EAAKC,IAAN,CAAqBnG,MAAO,CAACoG,aAAc,QAA3C,UACC,sBAAMC,UAAU,OAAhB,SAAwBJ,IAAaH,IADvBG,GAMT,MAIT,OACC,8BACc,iBAAX1D,EAA4BC,EAC9B,eAAC3B,EAAA,EAAD,CAAWwF,UAAU,eAArB,UACC,eAACH,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,cAACL,EAAA,EAAKM,OAAN,CAAaC,YAAa,EAAGC,OAAQ,EAAGC,OAAQ,EAAhD,SACIoC,EAUH,eAACc,EAAA,EAAOC,SAAR,CAAiBC,GAAInD,IAAOE,OAAK,EAACkD,UAAQ,EAACC,OAAQpB,EAAnD,UACC,eAACgB,EAAA,EAAD,CAAQtH,OAAQsG,EAAhB,UACC,cAAChJ,EAAA,EAAD,CAAQkK,GAAG,KAAKhK,UAAQ,EAAxB,kBAGA,cAACmK,EAAA,EAAD,CAAQrI,QAAS,WAAOiH,GAAW,IAAnC,qBAED,cAAClC,EAAA,EAAD,CAAOC,IAAK5D,EAAU6D,OAAK,EAC1BC,MAAO,CACNC,MAAO,OACPC,QAAS9C,GACTvC,KAAM,OACNsF,QAAQ,GAETrF,QAAS,kBAAMiH,GAAW,SAvB5B,cAAClC,EAAA,EAAD,CAAOC,IAAK5D,EAAU6D,OAAK,EAC1BC,MAAO,CACNC,MAAO,OACPC,QAAS9C,GACTvC,KAAM,OACNsF,QAAQ,OAuBX,eAAChB,EAAA,EAAKM,OAAN,CAAaC,YAAa,GAAIC,OAAQ,EAAGC,OAAQ,EAAjD,UACC,cAACT,EAAA,EAAKC,IAAN,CAAUnG,MAAO,CAACoG,aAAc,QAAhC,SACC,cAACvG,EAAA,EAAD,CAAQE,UAAQ,EAACwG,UAAU,OAA3B,SAAkC,mBAAGY,KAAMpE,EAAKsD,UAAU,OAAxB,SAAgCzG,QAElEoG,GAAY,SAAU,gBACtBA,GAAY,aAAciD,EAAWA,EAASkB,mBAAmB,QAAS,CAACC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAAc,KAC9HtE,GAAY,WAAYyB,IACxBzB,GAAY,qBAAsByD,GAAQ,MAAQ,MAClDzD,GAAY,UAAWuD,GAAMnC,KAAK,OAClCpB,GAAY,SAAUqD,GAAK7D,MAAM,EAAG,IAAI4B,KAAK,aAGhD,cAAClB,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,SACG4C,EACF,eAACjD,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,0BADD,IAC6C8C,KAE3C,UAGFzG,EAAU,UCzBA6H,EAjGAnI,sBAAW,WAAkBC,GAAS,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAiB,EACzB7B,oBAAS,GADgB,mBAC5C8B,EAD4C,KACrCC,EADqC,OAErB/B,mBAAS,IAFY,mBAE5CgC,EAF4C,KAEnCC,EAFmC,OAI/BjC,mBAAS,GAJsB,mBAI5C8J,EAJ4C,KAIxCC,EAJwC,OAKzB/J,mBAAS,IALgB,mBAK5Cd,EAL4C,KAKrCgD,EALqC,OAMflC,mBAAS,MANM,mBAM5CgK,EAN4C,KAMhCC,EANgC,OAOzBjK,mBAAS,GAPgB,mBAO5CkK,EAP4C,KAOrCC,EAPqC,OAQfnK,mBAAS,IARM,mBAQ5CoK,EAR4C,KAQhCC,EARgC,OASnBrK,mBAAS,IATU,mBAS5CsK,EAT4C,KASlCC,EATkC,OAU3BvK,mBAAS,IAVkB,mBAU5C2I,EAV4C,KAUtCC,EAVsC,OAWrB5I,mBAAS,IAXY,mBAW5CwK,EAX4C,KAWnCC,EAXmC,OAYvBzK,mBAAS,IAZc,mBAY5C0K,GAZ4C,KAYpCC,GAZoC,QAajB3K,mBAAS,IAbQ,qBAa5C4K,GAb4C,MAajCC,GAbiC,SAcf7K,mBAAS,IAdM,qBAc5C8K,GAd4C,MAchCC,GAdgC,SAe7B/K,mBAAS,IAfoB,qBAe5CqC,GAf4C,MAevCC,GAfuC,MAiB7CiC,GAAS,uCAAG,oCAAAC,EAAA,6DACjBvC,EAAW,cAACwC,EAAA,EAAD,CAAqB5C,QAAM,EAAC6C,OAAO,WAAWtF,KAAK,QAAnD,sBAAY,WACvB2C,GAAS,GAEH4C,EAAQ/C,EAAMgD,OAAO,GACrBC,EAAOjD,EAAMkD,OAAO,GACpBC,EAAmB,MAAVJ,GAA0B,MAATE,EAAejD,EAAMkD,MAAM,GAAI,GAAKlD,EANnD,SAQMoD,MAAM,GAAD,OA3BlBC,8CA2BkB,mBAAkBF,IAR7B,UASO,OADlBG,EARW,QASJnC,OATI,kCAUGmC,EAASC,OAVZ,QAUVC,EAVU,OAWhBrD,GAAS,GACTgI,EAAM3E,EAAI,IACVlD,EAASkD,EAAI,OACb6E,EAAc7E,EAAI,YAAkB,IAAI8D,KAAK9D,EAAI,aAAmB,MACpE+E,EAAS/E,EAAI,OACbiF,EAAcjF,EAAI,YAClBmF,EAAYnF,EAAI,UAChBwD,EAAQxD,EAAI,MACZqF,EAAWrF,EAAI,SACfuF,GAAUvF,EAAI,QACdyF,GAAazF,EAAI,WACjB2F,GAAc3F,EAAI,YAClB9C,GAAO8C,EAAI,KAvBK,wBA0BhBrD,GAAS,GACTE,EAAW,oBA3BK,4CAAH,qDA+BfoD,8BAAoB1D,GAAK,WACxB,MAAO,CACN4C,UAAWA,OAIb,IAAMyG,GAAkB,SAACzF,EAAM0F,GAC9B,OAAIA,GAASA,EAAMlE,OAAS,EAE1B,eAACvB,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,SAAwBJ,IAAa0F,EAAMvE,KAAK,SAK3C,MAIT,OACC,8BACc,WAAX7E,EAAsBC,EACxB,eAAC0D,EAAA,EAAD,CAAMI,QAAS,EAAGC,UAAU,OAA5B,UACC,cAACL,EAAA,EAAKM,OAAN,UACC,cAAC3G,EAAA,EAAD,CAAQE,UAAQ,EAACwG,UAAU,OAA3B,SAAkC,mBAAGY,KAAMpE,GAAKsD,UAAU,OAAxB,SAAgCmE,QAEnE,eAACtE,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,qBAAsCzG,KAEvC,eAACsG,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,qBAAsCuE,KAEvC,eAAC1E,EAAA,EAAKM,OAAN,WACC,sBAAMH,UAAU,OAAhB,2BACCqE,EAAaA,EAAWP,mBAAmB,QAAS,CAACC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAAc,OAEzGoB,GAAgB,eAAgBZ,GAChCY,GAAgB,aAAcV,GAC9BU,GAAgB,SAAUrC,GAC1BqC,GAAgB,YAAaR,GAC7BQ,GAAgB,WAAYN,IAC5BM,GAAgB,cAAeJ,IAC/BI,GAAgB,eAAgBF,OAEhC9I,EAAU,UCvFAkJ,MARf,YAA0C,IAAnBrJ,EAAkB,EAAlBA,OAAQG,EAAU,EAAVA,QAC9B,OACC,8BACc,UAAXH,EAAqBG,EAAU,Q,OCgGrBmJ,MA9Df,WAAgB,IAAD,EACYnL,mBAAS,GADrB,mBACPJ,EADO,KACAC,EADA,OAEYG,mBAAS,IAFrB,mBAEP4B,EAFO,KAEA9B,EAFA,OAGcE,mBAAS,MAHvB,mBAGP6B,EAHO,KAGCuJ,EAHD,OAIgBpL,mBAAS,IAJzB,mBAIPgC,EAJO,KAIEC,EAJF,KAMRoJ,EAAWC,iBAAO,MAClBC,EAAWD,iBAAO,MAClBE,EAAgBF,iBAAO,MACvBG,EAAiBH,iBAAO,MACxBI,EAAYJ,iBAAO,MAoCzB,OACC,sBAAK3F,UAAU,MAAf,UACC,cAAC,EAAD,CAAOzG,MAAM,mBACb,cAAC,EAAD,CAAQU,MAAOA,EAAOC,SAAUA,EAAUC,SAAUA,EAAUC,YArC5C,WACnB,GAAK6B,GAAU,KAAK+J,KAAK/J,GAKzB,OADqBhC,EAAQ,GAAKA,GAAS,EAAIA,EA5C5B,SAACgC,GACrB,GAAIA,EAAMmF,QAAU,EACnB,OAAQ,EAGT,IAAMpC,EAAQ/C,EAAMgD,OAAO,GACrBC,EAAOjD,EAAMkD,OAAO,GAC1B,MAAc,MAAVH,GAA0B,MAATE,EACb,EAEW,MAAVF,GAA0B,MAATE,EAClB,EAEW,MAAVF,GAA0B,MAATE,EAClB,EAEW,MAAVF,GAA0B,MAATE,EAClB,EAEW,MAAVF,GAA0B,MAATE,EAClB,GAGC,EAqB+C+G,CAAahK,IAEnE,KAAK,EACJwJ,EAAU,SACVC,EAASQ,QAAQtH,YACjB,MACD,KAAK,EACJ6G,EAAU,SACVG,EAASM,QAAQtH,YACjB,MACD,KAAK,EACJ6G,EAAU,eACVI,EAAcK,QAAQtH,YACtB,MACD,KAAK,EACJ6G,EAAU,gBACVK,EAAeI,QAAQtH,YACvB,MACD,KAAK,EACJ6G,EAAU,UACVM,EAAUG,QAAQtH,YAClB,MACD,QACC6G,EAAU,SACVnJ,EAAW,+BA3BZmJ,EAAU,SAoCV,eAACjL,EAAA,EAAD,CAAWb,MAAO,CAAEC,OAAQ,OAAQgB,QAAS,OAAQuL,OAAQjK,EAAS,kBAAoB,KAAMkK,WAAY,UAA5G,UACC,cAAC,EAAD,CAAOpK,IAAK0J,EAAUzJ,MAAOA,EAAOC,OAAQA,IAC5C,cAAC,EAAD,CAAOF,IAAK4J,EAAU3J,MAAOA,EAAOC,OAAQA,IAC5C,cAAC,EAAD,CAAYF,IAAK6J,EAAe5J,MAAOA,EAAOC,OAAQA,IACtD,cAAC,EAAD,CAAaF,IAAK8J,EAAgB7J,MAAOA,EAAOC,OAAQA,IACxD,cAAC,EAAD,CAAQF,IAAK+J,EAAW9J,MAAOA,EAAOC,OAAQA,IAC9C,cAAC,EAAD,CAAcA,OAAQA,EAAQG,QAASA,WCzF3CgK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3a8dec95.chunk.js","sourcesContent":["import React from 'react';\nimport { Header } from 'semantic-ui-react'\n\nfunction Title({title}) {\n\treturn (\n\t\t<div>\n\t\t\t<Header size='huge' inverted style={{ margin: '30px' }}>\n\t\t\t\t{title}\n\t\t\t</Header>\n\t\t</div>\n\t);\n}\n\nexport default Title;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Input, Tab, Segment } from 'semantic-ui-react';\n\nconst panes = [\n\t{ menuItem: 'Auto', placeholder: '{anime}, <manga>, [light novel], |visual novel|, (doujin)' },\n\t{ menuItem: 'Anime', placeholder: 'Search by anime name' },\n\t{ menuItem: 'Manga', placeholder: 'Search by manga name' },\n\t{ menuItem: 'Light Novel', placeholder: 'Search by light novel name' },\n\t{ menuItem: 'Visual Novel', placeholder: 'Search by visual novel name' },\n\t{ menuItem: 'Doujin', placeholder: 'Search by doujin digits' },\n];\n\nfunction Search({index, setIndex, setQuery, handleClick}) {\n\tconst [placeholder, setPlaceholder] = useState('Search');\n\t\n\tuseEffect(() => {\n\t\tsetPlaceholder(panes[index].placeholder)\n\t}, [index]);\n\t\n\tconst handleTabChange = (e, { activeIndex }) => {\n\t\tsetIndex(activeIndex);\n\t};\n\t\n\tconst handleInputChange = (e) => {\n\t\tsetQuery(e.target.value);\n\t};\n\t\n\tconst handleKeyDown = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\thandleClick();\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<Container style={{ width: '50%' }}>\n\t\t\t<Segment inverted \n\t\t\t\tstyle={{overflow: 'auto', margin: 'auto', padding: '1px' }}>\n\t\t\t\t<Tab panes={panes} \n\t\t\t\t\tmenu={{\n\t\t\t\t\t\tattached: true,\n\t\t\t\t\t\ttabular: true,\n\t\t\t\t\t\tinverted: true,\n\t\t\t\t\t}}\n\t\t\t\t\trenderActiveOnly={true}\n\t\t\t\t\tonTabChange={handleTabChange}\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t\t<Input action={{ \n\t\t\t\t\ticon: 'search',\n\t\t\t\t\tonClick: () => {handleClick()}\n\t\t\t\t}} \n\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\tsize='small' \n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tinverted \n\t\t\t\tonChange={handleInputChange} \n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Search;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Container, Grid, Image, Header, Loader } from 'semantic-ui-react';\n\nconst api = process.env.REACT_APP_API_SERVER;\n\nconst Anime = forwardRef(({query, active}, ref) => {\n\tconst [found, setFound] = useState(false);\n\tconst [message, setMessage] = useState('');\n\t\n\tconst [title, setTitle] = useState('');\n\tconst [titleEnglish, setTitleEnglish] = useState('');\n\tconst [url, setUrl] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [type, setType] = useState('');\n\tconst [source, setSource] = useState('');\n\tconst [episodes, setEpisodes] = useState(0);\n\tconst [status, setStatus] = useState('');\n\tconst [premiered, setPremiered] = useState('');\n\tconst [aired, setAired] = useState('');\n\tconst [duration, setDuration] = useState('');\n\tconst [rating, setRating] = useState('');\n\tconst [score, setScore] = useState(0)\n\tconst [synopsis, setSynopsis] = useState('');\n\tconst [relations, setRelations] = useState([]);\n\tconst [studios, setStudios] = useState([]);\n\tconst [genres, setGenres] = useState([]);\n\tconst [openings, setOpenings] = useState([]);\n\tconst [endings, setEndings] = useState([]);\n\t\n\tconst fetchData = async () => {\n\t\tsetMessage(<Loader key='loader' active inline='centered' size='large'>Searching</Loader>);\n\t\tsetFound(false);\n\t\t\n\t\tconst first = query.charAt(0);\n\t\tconst last = query.slice(-1);\n\t\tconst search = first === '{' && last === '}' ? query.slice(1, -1) : query;\n\t\t\n\t\tconst response = await fetch(`${api}/anime/${search}`);\n\t\tif (response.status === 200) {\n\t\t\tconst data = await response.json();\n\t\t\tsetFound(true);\n\t\t\tsetTitle(data['title']);\n\t\t\tsetTitleEnglish(data['title_english']);\n\t\t\tsetUrl(data['url']);\n\t\t\tsetImageUrl(data['image']);\n\t\t\tsetType(data['type']);\n\t\t\tsetSource(data['source']);\n\t\t\tsetEpisodes(data['episodes'] ? data['episodes'] : '?');\n\t\t\tsetStatus(data['status']);\n\t\t\tsetPremiered(data['premiered']);\n\t\t\tsetAired(data['aired'] ? data['aired']['string'] : '?');\n\t\t\tsetDuration(data['duration']);\n\t\t\tsetRating(data['rating']);\n\t\t\tsetScore(data['score']);\n\t\t\tsetSynopsis(data['synopsis']);\n\t\t\tsetRelations(data['relations']);\n\t\t\tsetStudios(data['studios']);\n\t\t\tsetGenres(data['genres']);\n\t\t\tsetOpenings(data['openings']);\n\t\t\tsetEndings(data['endings']);\n\t\t}\n\t\telse {\n\t\t\tsetFound(false);\n\t\t\tsetMessage('Anime not found');\n\t\t}\n\t};\n\t\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tfetchData: fetchData\n\t\t};\n\t});\n\t\n\tconst textGridRow = (name, data) => {\n\t\tif (data && data !== '') {\n\t\t\treturn (\n\t\t\t\t<Grid.Row key={name} style={{marginBottom: '10px'}}>\n\t\t\t\t\t<span className='bold'>{name}</span>{data}\n\t\t\t\t</Grid.Row>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div>\n\t\t\t{ active === 'anime' ? found ?\n\t\t\t<Container className='smaller-font'>\n\t\t\t\t<Grid columns={2} textAlign='left'>\n\t\t\t\t\t<Grid.Column largeScreen={4} tablet={6} mobile={6}>\n\t\t\t\t\t\t<Image src={imageUrl} fluid label={{\n\t\t\t\t\t\t\tcolor: 'blue',\n\t\t\t\t\t\t\tcontent: score,\n\t\t\t\t\t\t\ticon: 'star',\n\t\t\t\t\t\t\tribbon: true\n\t\t\t\t\t\t}} />\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column largeScreen={10} tablet={9} mobile={9}>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<Header inverted textAlign='left'><a href={url} className='link'>{title}</a></Header>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t{textGridRow('English Title: ', titleEnglish)}\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<span className='bold'>Type: </span>{type} | <span className='bold'>Episodes: </span>{episodes}\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t{textGridRow('Status: ', status)}\n\t\t\t\t\t\t{textGridRow('Rating: ', rating)}\n\t\t\t\t\t\t{textGridRow('Studios: ', studios.join(', '))}\n\t\t\t\t\t\t{textGridRow('Source: ', source)}\n\t\t\t\t\t\t{textGridRow('Duration: ', duration)}\n\t\t\t\t\t\t{textGridRow('Season: ', premiered)}\n\t\t\t\t\t\t{textGridRow('Aired: ', aired)}\n\t\t\t\t\t\t{textGridRow('Genres: ', genres.join(', '))}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid columns={1} textAlign='left'>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<span className='bold'>Synopsis:</span> {synopsis}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t{Object.entries(relations).map(r => {\n\t\t\t\t\t\t\treturn textGridRow(`${r[0]}: `, r[1].join(', '))\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '5px'}}><span className='bold'>Openings</span></Grid.Row>\n\t\t\t\t\t\t{openings && openings.length > 0 ? \n\t\t\t\t\t\topenings.map((x, i) => {\n\t\t\t\t\t\t\treturn <Grid.Row key={`op${i}`} style={{marginBottom: '5px'}}>{i+1}. {x}</Grid.Row>\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: 'None'}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '5px'}}><span className='bold'>Endings</span></Grid.Row>\n\t\t\t\t\t\t{endings && endings.length > 0 ?\n\t\t\t\t\t\tendings.map((x, i) => {\n\t\t\t\t\t\t\treturn <Grid.Row key={`ed${i}`} style={{marginBottom: '5px'}}>{i+1}. {x}</Grid.Row>\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: 'None'}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t\t: message : null }\n\t\t</div>\n\t);\n});\n\nexport default Anime;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Container, Grid, Image, Header, Loader } from 'semantic-ui-react';\n\nconst api = process.env.REACT_APP_API_SERVER;\n\nconst Manga = forwardRef(({query, active}, ref) => {\n\tconst [found, setFound] = useState(false);\n\tconst [message, setMessage] = useState('');\n\t\n\tconst [title, setTitle] = useState('');\n\tconst [titleEnglish, setTitleEnglish] = useState('');\n\tconst [url, setUrl] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [type, setType] = useState('');\n\tconst [volumes, setVolumes] = useState(0);\n\tconst [chapters, setChapters] = useState(0);\n\tconst [status, setStatus] = useState('');\n\tconst [published, setPublished] = useState('');\n\tconst [rating, setRating] = useState('');\n\tconst [score, setScore] = useState(0)\n\tconst [synopsis, setSynopsis] = useState('');\n\tconst [relations, setRelations] = useState([]);\n\tconst [genres, setGenres] = useState([]);\n\tconst [authors, setAuthors] = useState([]);\n\tconst [serializations, setSerializations] = useState([]);\n\t\n\tconst fetchData = async () => {\n\t\tsetMessage(<Loader key='loader' active inline='centered' size='large'>Searching</Loader>);\n\t\tsetFound(false);\n\t\t\n\t\tconst first = query.charAt(0);\n\t\tconst last = query.slice(-1);\n\t\tconst search = first === '<' && last === '>' ? query.slice(1, -1) : query;\n\t\t\n\t\tconst response = await fetch(`${api}/manga/${search}`);\n\t\tif (response.status === 200) {\n\t\t\tconst data = await response.json();\n\t\t\tsetFound(true);\n\t\t\tsetTitle(data['title']);\n\t\t\tsetTitleEnglish(data['title_english']);\n\t\t\tsetUrl(data['url']);\n\t\t\tsetImageUrl(data['image']);\n\t\t\tsetType(data['type']);\n\t\t\tsetVolumes(data['volumes'] ? data['volumes'] : '?');\n\t\t\tsetChapters(data['chapters'] ? data['chapters'] : '?');\n\t\t\tsetStatus(data['status']);\n\t\t\tsetPublished(data['published'] ? data['published']['string'] : '');\n\t\t\tsetRating(data['rating']);\n\t\t\tsetScore(data['score']);\n\t\t\tsetSynopsis(data['synopsis']);\n\t\t\tsetRelations(data['relations']);\n\t\t\tsetGenres(data['genres']);\n\t\t\tsetAuthors(data['authors']);\n\t\t\tsetSerializations(data['serializations']);\n\t\t}\n\t\telse {\n\t\t\tsetFound(false);\n\t\t\tsetMessage('Manga not found');\n\t\t}\n\t};\n\t\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tfetchData: fetchData\n\t\t};\n\t});\n\t\n\tconst textGridRow = (name, data) => {\n\t\tif (data && data !== '') {\n\t\t\treturn (\n\t\t\t\t<Grid.Row key={name} style={{marginBottom: '10px'}}>\n\t\t\t\t\t<span className='bold'>{name}</span>{data}\n\t\t\t\t</Grid.Row>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t};\n\t\n\tconst nameConverter = (names) => {\n\t\treturn names.map(n => n.split(', ').reverse().join(\" \")).join(', ');\n\t};\n\t\n\treturn (\n\t\t<div>\n\t\t\t{ active === 'manga' ? found ?\n\t\t\t<Container className='smaller-font'>\n\t\t\t\t<Grid columns={2} textAlign='left'>\n\t\t\t\t\t<Grid.Column largeScreen={4} tablet={6} mobile={6}>\n\t\t\t\t\t\t<Image src={imageUrl} fluid label={{\n\t\t\t\t\t\t\tcolor: 'blue',\n\t\t\t\t\t\t\tcontent: score,\n\t\t\t\t\t\t\ticon: 'star',\n\t\t\t\t\t\t\tribbon: true\n\t\t\t\t\t\t}} />\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column largeScreen={10} tablet={9} mobile={9}>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<Header inverted textAlign='left'><a href={url} className='link'>{title}</a></Header>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t{textGridRow('English Title: ', titleEnglish)}\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<span className='bold'>Type: </span>{type} | <span className='bold'>Status: </span>{status}\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<span className='bold'>Volumes: </span>{volumes} | <span className='bold'>Chapters: </span>{chapters}\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t{textGridRow('Rating: ', rating)}\n\t\t\t\t\t\t{textGridRow('Published: ', published)}\n\t\t\t\t\t\t{textGridRow('Authors: ', nameConverter(authors))}\n\t\t\t\t\t\t{textGridRow('Serializations: ', serializations)}\n\t\t\t\t\t\t{textGridRow('Genres: ', genres.join(', '))}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid columns={1} textAlign='left'>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<span className='bold'>Synopsis:</span> {synopsis}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t{Object.entries(relations).map(r => {\n\t\t\t\t\t\t\treturn textGridRow(`${r[0]}: `, r[1].join(', '))\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t\t: message : null }\n\t\t</div>\n\t);\n});\n\nexport default Manga;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Container, Grid, Image, Header, Loader } from 'semantic-ui-react';\n\nconst api = process.env.REACT_APP_API_SERVER;\n\nconst LightNovel = forwardRef(({query, active}, ref) => {\n\tconst [found, setFound] = useState(false);\n\tconst [message, setMessage] = useState('');\n\t\n\tconst [title, setTitle] = useState('');\n\tconst [titleEnglish, setTitleEnglish] = useState('');\n\tconst [url, setUrl] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [type, setType] = useState('');\n\tconst [volumes, setVolumes] = useState(0);\n\tconst [chapters, setChapters] = useState(0);\n\tconst [status, setStatus] = useState('');\n\tconst [published, setPublished] = useState('');\n\tconst [rating, setRating] = useState('');\n\tconst [score, setScore] = useState(0)\n\tconst [synopsis, setSynopsis] = useState('');\n\tconst [relations, setRelations] = useState([]);\n\tconst [genres, setGenres] = useState([]);\n\tconst [authors, setAuthors] = useState([]);\n\t\n\tconst fetchData = async () => {\n\t\tsetMessage(<Loader key='loader' active inline='centered' size='large'>Searching</Loader>);\n\t\tsetFound(false);\n\t\t\n\t\tconst first = query.charAt(0);\n\t\tconst last = query.slice(-1);\n\t\tconst search = first === '[' && last === ']' ? query.slice(1, -1) : query;\n\t\t\n\t\tconst response = await fetch(`${api}/ln/${search}`);\n\t\tif (response.status === 200) {\n\t\t\tconst data = await response.json();\n\t\t\tsetFound(true);\n\t\t\tsetTitle(data['title']);\n\t\t\tsetTitleEnglish(data['title_english']);\n\t\t\tsetUrl(data['url']);\n\t\t\tsetImageUrl(data['image']);\n\t\t\tsetType(data['type']);\n\t\t\tsetVolumes(data['volumes'] ? data['volumes'] : '?');\n\t\t\tsetChapters(data['chapters'] ? data['chapters'] : '?');\n\t\t\tsetStatus(data['status']);\n\t\t\tsetPublished(data['published'] ? data['published']['string'] : '');\n\t\t\tsetRating(data['rating']);\n\t\t\tsetScore(data['score']);\n\t\t\tsetSynopsis(data['synopsis']);\n\t\t\tsetRelations(data['relations']);\n\t\t\tsetGenres(data['genres']);\n\t\t\tsetAuthors(data['authors']);\n\t\t}\n\t\telse {\n\t\t\tsetFound(false);\n\t\t\tsetMessage('Light novel not found');\n\t\t}\n\t};\n\t\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tfetchData: fetchData\n\t\t};\n\t});\n\t\n\tconst textGridRow = (name, data) => {\n\t\tif (data && data !== '') {\n\t\t\treturn (\n\t\t\t\t<Grid.Row key={name} style={{marginBottom: '10px'}}>\n\t\t\t\t\t<span className='bold'>{name}</span>{data}\n\t\t\t\t</Grid.Row>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t};\n\t\n\tconst nameConverter = (names) => {\n\t\treturn names.map(n => n.split(', ').reverse().join(\" \")).join(', ');\n\t};\n\t\n\treturn (\n\t\t<div>\n\t\t\t{ active === 'light novel' ? found ?\n\t\t\t<Container className='smaller-font'>\n\t\t\t\t<Grid columns={2} textAlign='left'>\n\t\t\t\t\t<Grid.Column largeScreen={4} tablet={6} mobile={6}>\n\t\t\t\t\t\t<Image src={imageUrl} fluid label={{\n\t\t\t\t\t\t\tcolor: 'blue',\n\t\t\t\t\t\t\tcontent: score,\n\t\t\t\t\t\t\ticon: 'star',\n\t\t\t\t\t\t\tribbon: true\n\t\t\t\t\t\t}} />\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column largeScreen={10} tablet={9} mobile={9}>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<Header inverted textAlign='left'><a href={url} className='link'>{title}</a></Header>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t{textGridRow('English Title: ', titleEnglish)}\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<span className='bold'>Type: </span>{type} | <span className='bold'>Status: </span>{status}\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<span className='bold'>Volumes: </span>{volumes} | <span className='bold'>Chapters: </span>{chapters}\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t{textGridRow('Rating: ', rating)}\n\t\t\t\t\t\t{textGridRow('Published: ', published)}\n\t\t\t\t\t\t{textGridRow('Authors: ', nameConverter(authors))}\n\t\t\t\t\t\t{textGridRow('Genres: ', genres.join(', '))}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid columns={1} textAlign='left'>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<span className='bold'>Synopsis:</span> {synopsis}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t{Object.entries(relations).map(r => {\n\t\t\t\t\t\t\treturn textGridRow(`${r[0]}: `, r[1].join(', '))\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t\t: message : null }\n\t\t</div>\n\t);\n});\n\nexport default LightNovel;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Container, Grid, Image, Header, Loader, Dimmer, Button } from 'semantic-ui-react';\n\nconst api = process.env.REACT_APP_API_SERVER;\n\nconst VisualNovel = forwardRef(({query, active}, ref) => {\n\tconst [found, setFound] = useState(false);\n\tconst [message, setMessage] = useState('');\n\tconst [blurred, setBlurred] = useState(true);\n\t\n\tconst [title, setTitle] = useState('');\n\tconst [url, setUrl] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [imageNSFW, setImageNSFW] = useState(false);\n\tconst [released, setReleased] = useState(null);\n\tconst [description, setDescription] = useState('');\n\tconst [tags, setTags] = useState([]);\n\tconst [staff, setStaff] = useState([]);\n\tconst [anime, setAnime] = useState(false);\n\tconst [length, setLength] = useState('');\n\tconst [score, setScore] = useState(0);\n\t\n\tconst fetchData = async () => {\n\t\tsetMessage(<Loader key='loader' active inline='centered' size='large'>Searching</Loader>);\n\t\tsetFound(false);\n\t\t\n\t\tconst first = query.charAt(0);\n\t\tconst last = query.slice(-1);\n\t\tconst search = first === '|' && last === '|' ? query.slice(1, -1) : query;\n\t\t\n\t\tconst response = await fetch(`${api}/vn/${search}`);\n\t\tif (response.status === 200) {\n\t\t\tconst data = await response.json();\n\t\t\tsetFound(true);\n\t\t\tsetBlurred(true);\n\t\t\tsetTitle(data['title']);\n\t\t\tsetUrl(data['url']);\n\t\t\tsetImageUrl(data['image']);\n\t\t\tsetImageNSFW(data['image_nsfw']);\n\t\t\tsetReleased(data['released'] ? new Date(data['released']) : null);\n\t\t\tsetDescription(data['description']);\n\t\t\tsetTags(data['tags']);\n\t\t\tsetStaff(data['staff']);\n\t\t\tsetAnime(data['anime']);\n\t\t\tsetLength(data['length']);\n\t\t\tsetScore(data['rating']);\n\t\t}\n\t\telse {\n\t\t\tsetFound(false);\n\t\t\tsetMessage('Visual novel not found');\n\t\t}\n\t};\n\t\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tfetchData: fetchData\n\t\t};\n\t});\n\t\n\tconst textGridRow = (name, data) => {\n\t\tif (data && data !== '') {\n\t\t\treturn (\n\t\t\t\t<Grid.Row key={name} style={{marginBottom: '10px'}}>\n\t\t\t\t\t<span className='bold'>{name}</span>{data}\n\t\t\t\t</Grid.Row>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div>\n\t\t\t{ active === 'visual novel' ? found ?\n\t\t\t<Container className='smaller-font'>\n\t\t\t\t<Grid columns={2} textAlign='left'>\n\t\t\t\t\t<Grid.Column largeScreen={4} tablet={6} mobile={6}>\n\t\t\t\t\t\t{ !imageNSFW ?\n\t\t\t\t\t\t<Image src={imageUrl} fluid \n\t\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\t\tcolor: 'blue',\n\t\t\t\t\t\t\t\tcontent: score,\n\t\t\t\t\t\t\t\ticon: 'star',\n\t\t\t\t\t\t\t\tribbon: true\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Dimmer.Dimmable as={Image} fluid blurring dimmed={blurred}>\n\t\t\t\t\t\t\t<Dimmer active={blurred}>\n\t\t\t\t\t\t\t\t<Header as='h2' inverted>\n\t\t\t\t\t\t\t\t\tNSFW\n\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t<Button onClick={() => {setBlurred(false)}}>View</Button>\n\t\t\t\t\t\t\t</Dimmer>\n\t\t\t\t\t\t\t<Image src={imageUrl} fluid \n\t\t\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\t\t\tcolor: 'blue',\n\t\t\t\t\t\t\t\t\tcontent: score,\n\t\t\t\t\t\t\t\t\ticon: 'star',\n\t\t\t\t\t\t\t\t\tribbon: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => setBlurred(true)}\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t</Dimmer.Dimmable>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column largeScreen={10} tablet={9} mobile={9}>\n\t\t\t\t\t\t<Grid.Row style={{marginBottom: '10px'}}>\n\t\t\t\t\t\t\t<Header inverted textAlign='left'><a href={url} className='link'>{title}</a></Header>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t{textGridRow('Type: ', 'Visual Novel')}\n\t\t\t\t\t\t{textGridRow('Released: ', released ? released.toLocaleDateString(\"en-US\", {year: 'numeric', month: 'long', day: 'numeric'}) : '?')}\n\t\t\t\t\t\t{textGridRow('Length: ', length)}\n\t\t\t\t\t\t{textGridRow('Anime Adaptation: ', anime ? 'Yes' : 'No')}\n\t\t\t\t\t\t{textGridRow('Staff: ', staff.join(', '))}\n\t\t\t\t\t\t{textGridRow('Tags: ', tags.slice(0, 20).join(', '))}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid columns={1} textAlign='left'>\n\t\t\t\t\t{ description ?\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<span className='bold'>Description:</span> {description}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t: null }\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t\t: message : null }\n\t\t</div>\n\t);\n});\n\nexport default VisualNovel;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Grid, Header, Loader } from 'semantic-ui-react';\n\nconst api = process.env.REACT_APP_API_SERVER;\n\nconst Doujin = forwardRef(({query, active}, ref) => {\n\tconst [found, setFound] = useState(false);\n\tconst [message, setMessage] = useState('');\n\t\n\tconst [id, setId] = useState(0);\n\tconst [title, setTitle] = useState('');\n\tconst [uploadDate, setUploadDate] = useState(null);\n\tconst [pages, setPages] = useState(0);\n\tconst [characters, setCharacters] = useState([]);\n\tconst [parodies, setParodies] = useState([]);\n\tconst [tags, setTags] = useState([]);\n\tconst [artists, setArtists] = useState([]);\n\tconst [groups, setGroups] = useState([]);\n\tconst [languages, setLanguages] = useState([]);\n\tconst [categories, setCategories] = useState([]);\n\tconst [url, setUrl] = useState('');\n\t\n\tconst fetchData = async () => {\n\t\tsetMessage(<Loader key='loader' active inline='centered' size='large'>Searching</Loader>);\n\t\tsetFound(false);\n\t\t\n\t\tconst first = query.charAt(0);\n\t\tconst last = query.slice(-1);\n\t\tconst search = first === '(' && last === ')' ? query.slice(1, -1) : query;\n\t\t\n\t\tconst response = await fetch(`${api}/doujin/${search}`);\n\t\tif (response.status === 200) {\n\t\t\tconst data = await response.json();\n\t\t\tsetFound(true);\n\t\t\tsetId(data['id']);\n\t\t\tsetTitle(data['title']);\n\t\t\tsetUploadDate(data['upload_date'] ? new Date(data['upload_date']) : null);\n\t\t\tsetPages(data['pages']);\n\t\t\tsetCharacters(data['characters']);\n\t\t\tsetParodies(data['parodies']);\n\t\t\tsetTags(data['tags']);\n\t\t\tsetArtists(data['artists']);\n\t\t\tsetGroups(data['groups']);\n\t\t\tsetLanguages(data['languages']);\n\t\t\tsetCategories(data['categories']);\n\t\t\tsetUrl(data['url']);\n\t\t}\n\t\telse {\n\t\t\tsetFound(false);\n\t\t\tsetMessage('Doujin not found');\n\t\t}\n\t};\n\t\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tfetchData: fetchData\n\t\t};\n\t});\n\t\n\tconst arrayGridColumn = (name, array) => {\n\t\tif (array && array.length > 0) {\n\t\t\treturn (\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<span className='bold'>{name}</span>{array.join(', ')}\n\t\t\t\t</Grid.Column>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div>\n\t\t\t{ active === 'doujin' ? found ?\n\t\t\t<Grid columns={1} textAlign='left'>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<Header inverted textAlign='left'><a href={url} className='link'>{id}</a></Header>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<span className='bold'>Title: </span>{title}\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<span className='bold'>Pages: </span>{pages}\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column>\n\t\t\t\t\t<span className='bold'>Upload Date: </span> \n\t\t\t\t\t{uploadDate ? uploadDate.toLocaleDateString(\"en-US\", {year: 'numeric', month: 'long', day: 'numeric'}) : '?'}\n\t\t\t\t</Grid.Column>\n\t\t\t\t{arrayGridColumn('Characters: ', characters)}\n\t\t\t\t{arrayGridColumn('Parodies: ', parodies)}\n\t\t\t\t{arrayGridColumn('Tags: ', tags)}\n\t\t\t\t{arrayGridColumn('Artists: ', artists)}\n\t\t\t\t{arrayGridColumn('Groups: ', groups)}\n\t\t\t\t{arrayGridColumn('Languages: ', languages)}\n\t\t\t\t{arrayGridColumn('Categories: ', categories)}\n\t\t\t</Grid> \n\t\t\t: message : null }\n\t\t</div>\n\t);\n});\n\nexport default Doujin;\n","import React from 'react';\n\nfunction ErrorMessage({active, message}) {\n\treturn (\n\t\t<div>\n\t\t\t{ active === 'error' ? message : null }\n\t\t</div>\n\t);\n}\n\nexport default ErrorMessage;","import React, { useState, useRef } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport Title from './components/Title';\nimport Search from './components/Search';\nimport Anime from './components/Anime';\nimport Manga from './components/Manga';\nimport LightNovel from './components/LightNovel';\nimport VisualNovel from './components/VisualNovel';\nimport Doujin from './components/Doujin';\nimport ErrorMessage from './components/ErrorMessage';\nimport './App.css';\n\nconst parsePattern = (query) => {\n\tif (query.length <= 2) {\n\t\treturn -1;\n\t}\n\t\n\tconst first = query.charAt(0);\n\tconst last = query.slice(-1);\n\tif (first === '{' && last === '}') {\n\t\treturn 1;\n\t}\n\telse if (first === '<' && last === '>') {\n\t\treturn 2;\n\t}\n\telse if (first === '[' && last === ']') {\n\t\treturn 3;\n\t}\n\telse if (first === '|' && last === '|') {\n\t\treturn 4;\n\t}\n\telse if (first === '(' && last === ')') {\n\t\treturn 5;\n\t}\n\telse {\n\t\treturn -1;\n\t}\n};\n\nfunction App() {\n\tconst [index, setIndex] = useState(0);\n\tconst [query, setQuery] = useState('');\n\tconst [active, setActive] = useState(null);\n\tconst [message, setMessage] = useState('');\n\t\n\tconst animeRef = useRef(null);\n\tconst mangaRef = useRef(null);\n\tconst LightNovelRef = useRef(null);\n\tconst VisualNovelRef = useRef(null);\n\tconst doujinRef = useRef(null);\n\t\n\tconst handleClick = () => {\n\t\tif (!query || !/\\S/.test(query)) {\n\t\t\tsetActive(null);\n\t\t\treturn;\n\t\t}\n\t\tconst currentIndex = index > 0 && index <= 5 ? index : parsePattern(query);\n\t\tswitch (currentIndex) {\n\t\t\tcase 1:\n\t\t\t\tsetActive('anime');\n\t\t\t\tanimeRef.current.fetchData();\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tsetActive('manga');\n\t\t\t\tmangaRef.current.fetchData();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tsetActive('light novel');\n\t\t\t\tLightNovelRef.current.fetchData();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tsetActive('visual novel');\n\t\t\t\tVisualNovelRef.current.fetchData();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tsetActive('doujin');\n\t\t\t\tdoujinRef.current.fetchData();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetActive('error');\n\t\t\t\tsetMessage('Invalid search pattern');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Title title=\"Sauce Searcher\" />\n\t\t\t<Search index={index} setIndex={setIndex} setQuery={setQuery} handleClick={handleClick} />\n\t\t\t<Container style={{ margin: '30px', padding: '30px', border: active ? '2px solid white' : null, lineHeight: 'normal' }}>\n\t\t\t\t<Anime ref={animeRef} query={query} active={active} />\n\t\t\t\t<Manga ref={mangaRef} query={query} active={active} />\n\t\t\t\t<LightNovel ref={LightNovelRef} query={query} active={active} />\n\t\t\t\t<VisualNovel ref={VisualNovelRef} query={query} active={active} />\n\t\t\t\t<Doujin ref={doujinRef} query={query} active={active} />\n\t\t\t\t<ErrorMessage active={active} message={message} />\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}